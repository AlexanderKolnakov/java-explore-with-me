DROP TABLE IF EXISTS USERS CASCADE;
DROP TABLE IF EXISTS CATEGORYS CASCADE;
DROP TABLE IF EXISTS PARTICIPATION_REQUESTS CASCADE;
DROP TABLE IF EXISTS EVENTS CASCADE;
DROP TABLE IF EXISTS COMPILATION CASCADE;
DROP TABLE IF EXISTS COMPILATIONS_EVENTS CASCADE;
DROP TABLE IF EXISTS LOCATION_IN_MAP CASCADE;



CREATE TABLE IF NOT EXISTS USERS
(
    ID                        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    USER_NAME                 VARCHAR(255)                            NOT NULL,
    USER_EMAIL                VARCHAR(255)                            NOT NULL,
    CONSTRAINT PK_USER PRIMARY KEY (ID)
    );

CREATE TABLE IF NOT EXISTS CATEGORYS
(
    ID                        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    CATEGORY_NAME             VARCHAR(500)                            NOT NULL,
    CONSTRAINT PK_CATEGORY   PRIMARY KEY (ID)
    );

CREATE TABLE IF NOT EXISTS EVENTS
(
    ID                        BIGINT GENERATED BY DEFAULT AS IDENTITY ,
    ANNOTATION                VARCHAR                                 ,
    CATEGORY_ID               INTEGER                                 ,
    CONFIMED_REQUESTS         INTEGER                                 ,
    CREATED_ON                TIMESTAMP WITHOUT TIME ZONE             ,
    DESCRIPTION               VARCHAR                                 ,
    EVENT_DATE                TIMESTAMP WITHOUT TIME ZONE             ,
    USER_ID                   INTEGER                                 ,
    LOCATION_IN_MAP_ID        INTEGER                                 ,
    PAID                      BOOLEAN                                 ,
    PARTICIPANT_LIMIT         INTEGER                                 ,
    PUBLISHED_ON              TIMESTAMP WITHOUT TIME ZONE             ,
    REQUEST_MODERATION        BOOLEAN                                 ,
    EVENTS_STATE              VARCHAR(40)                             ,
    TITLE                     VARCHAR(120)                            ,
    VIEWS                     INTEGER                                 ,

    CONSTRAINT PK_EVENTS   PRIMARY KEY (ID)
    );

CREATE TABLE IF NOT EXISTS PARTICIPATION_REQUESTS
(
    ID                        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    CREATED                   TIMESTAMP WITHOUT TIME ZONE,
    EVENT                     INTEGER                                 NOT NULL,
    REQUESTER                 INTEGER                                 NOT NULL,
    STATUS                    VARCHAR(255)                            NOT NULL,

    CONSTRAINT PK_PARTICIPATION_REQUESTS PRIMARY KEY (ID)
    );

CREATE TABLE IF NOT EXISTS COMPILATION
(
    ID                        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    PINNED                    BOOLEAN                                 NOT NULL,
    TITLE                     VARCHAR(500)                            NOT NULL,

    CONSTRAINT PK_COMPILATION   PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS COMPILATIONS_EVENTS
(
    ID                        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    COMPILATION_ID            INTEGER                                 NOT NULL,
    EVENT_ID                  INTEGER                                 NOT NULL,
    CONSTRAINT COMPILATIONS_EVENTS_PK PRIMARY KEY (ID),
    CONSTRAINT COMPILATIONS_EVENTS_FK FOREIGN KEY (COMPILATION_ID) REFERENCES COMPILATION(ID) ON
        DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT COMPILATIONS_EVENTS_FK_1 FOREIGN KEY (EVENT_ID) REFERENCES EVENTS(ID) ON
        DELETE CASCADE ON UPDATE CASCADE

);

CREATE TABLE IF NOT EXISTS LOCATION_IN_MAP
(
    ID                        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    LAT                       FLOAT                                   NOT NULL,
    LON                       FLOAT                                   NOT NULL,
    COUNTRY_CODE              VARCHAR(50)                                     ,
    CITY                      VARCHAR(100)                                    ,
    LOCATION_TEXT             VARCHAR(500)                                    ,
    CONSTRAINT LOCATION PRIMARY KEY (ID)
);


